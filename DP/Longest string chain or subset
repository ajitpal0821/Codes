bool compare(string s1,string s2){
    if(s1.length()==s2.length()+1){
        int i=0,j=0;
        while(i<s1.length()){
          if (s1[i] == s2[j]) {
            i++;
            j++;
          } else {
            i++;
          }
        }
        if(i==s1.length() && j==s2.length())
        return true;
        return false;

    } else
        return false;
}
bool cmp(string &s1,string &s2){
    return s1.size()<s2.size();
}
int longestStrChain(vector<string> &arr){
    // Write your code here.
    int n=arr.size();
    vector<int>dp(n,1);
    int maxi=0;
    sort(arr.begin(),arr.end(),cmp);
    for(int i=0;i<n;i++){
        for(int j=0;j<i;j++){
            if(compare(arr[i],arr[j]) && dp[j]+1>dp[i]){
                dp[i]=dp[j]+1;
            }
        }
        if(dp[i]>maxi){
            maxi=dp[i];
        }
    }
    return maxi;
}
