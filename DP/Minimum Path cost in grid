class Solution {
public:
int recur(int i,int j,vector<vector<int>>& grid,vector<vector<int>>& moveCost,vector<vector<int>>& dp){
    int m=grid[0].size();
    int n=grid.size();
    if(i==n-1)
    return grid[i][j];
   if(dp[i][j]!=-1)
   return dp[i][j];
    int mini=INT_MAX;
    for(int k=0;k<m;k++)
    mini=min(mini,grid[i][j]+moveCost[grid[i][j]][k]+recur(i+1,k,grid,moveCost,dp));

    return dp[i][j]=mini;
}
    int minPathCost(vector<vector<int>>& grid, vector<vector<int>>& moveCost) {
        int n=grid.size();
        int m=grid[0].size();
        int mini=INT_MAX;
       vector<vector<int>>dp(n,vector<int>(m,-1));
        for(int i=0;i<m;i++)
         mini=min(mini,recur(0,i,grid,moveCost,dp));

         return mini;
    }
};
