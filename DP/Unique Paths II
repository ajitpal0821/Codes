int mod=1000000007;

int recur(vector<vector<int>>& mat, int i, int j,vector<vector<int>>& dp) {
    if (i == 0 && j == 0) {
        return 1;
    }
    
      if(dp[i][j] != -1) return dp[i][j];
    if (i < 0 || j < 0) {
        return 0;
    }
    
    if (i>=0 && j>=0 && mat[i][j] == -1) {
        return 0;
    }
    
    int left = recur(mat, i - 1, j,dp) % mod;
    int right = recur(mat, i, j - 1,dp) % mod;

    return dp[i][j]=(left + right) % mod;
}

int mazeObstacles(int n, int m, vector<vector<int>>& mat) {
    vector<vector<int>>dp(n,vector<int>(m,-1));
for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
        if(mat[i][j]==-1)
        dp[i][j]=0;
        else if(i==0 &&j==0)
        dp[i][j]=1;
        else {
            int left=0,right=0;
            if (i>0)
               left=dp[i-1][j]%mod;
              if(j>0)
             right=dp[i][j-1]%mod;
             dp[i][j]=(left+right)%mod;
        }
    }
}
return dp[n-1][m-1];    // return recur(mat, n - 1, m - 1,dp);
}
