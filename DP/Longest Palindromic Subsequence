// https://practice.geeksforgeeks.org/problems/longest-palindromic-subsequence-1612327878/1
// Just Add Second string as reverse of A string and apply LCS and rest same



#include<bits/stdc++.h>
#include<string>
class Solution{
  public:
  int lcs(string A,string B){
      int m=A.length();
      int dp[m+1][m+1];
      
      for(int i=0;i<m+1;i++){
          for(int j=0;j<m+1;j++){
              if(j==0 or i==0)
              dp[i][j]=0;
          }
      }
      
      for(int i=1;i<m+1;i++){
          for(int j=1;j<m+1;j++){
              if(A[i-1]==B[j-1])
              dp[i][j]=1+dp[i-1][j-1];
              else
              dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
          }
      }
      
      return (dp[m][m]);
  }
    int longestPalinSubseq(string A) {
        //code here
        string B=string(A.rbegin(), A.rend());
        return lcs(A,B);
    }
};
