int f(int day,int last,vector<vector<int>>&dp,vector<vector<int>> points){
    if(day==0){
        int maxi=0;
        for(int i=0;i<=2;i++){
            if(i!=last)
            maxi=max(maxi,points[day][i]);
        }
        return  maxi;
    }
   int maxi=0;
   if(dp[day][last]!=-1)
   return dp[day][last];
    for(int i=0;i<=2;i++){
        if(i!=last){
            int sum=points[day][i]+f(day-1,i,dp,points);
            maxi=max(maxi,sum);
        }
    }
    return dp[day][last]=maxi;    
}
int ninjaTraining(int n, vector<vector<int>> &points)
{
    // Write your code here.
    // vector<vector<int>>dp(n,vector<int>(4,0));
    vector<int>prev(4,-1);
    // day=0
    prev[0]=max(points[0][1],points[0][2]);
    prev[1]=max(points[0][0],points[0][2]);
    prev[2]=max(points[0][0],points[0][1]);
    prev[3]=max(max(points[0][0],points[0][1]),points[0][2]);

    for(int day=1;day<n;day++){
        vector<int>temp(4,-1);
        for(int last=0;last<4;last++){
            temp[last]=0;
            for(int task=0;task<3;task++){
                if(task!=last){
                  
                   temp[last]=max(points[day][task]+prev[task],temp[last]);
                }
            }
        }
        prev=temp;
    }
    return prev[3];

//    return f(n-1,3,dp,points);

}
