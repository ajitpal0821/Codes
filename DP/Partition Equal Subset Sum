bool canPartition(vector<int> &arr, int n)
{
	// Write your code here.
	int sum=0;
	for(int i=0;i<n;i++){
		sum=sum+arr[i];
	}
	if (sum%2!=0)
	return false;
	int k=sum/2;
	bool dp[n+1][k+1];
    for(int i=0;i<n+1;i++){
        for(int j=0;j<k+1;j++){
             if(i==0)// weight are zero
            dp[i][j]=false;
            else if(j==0)//weight is zero
                dp[i][j]=true;
        }
    }
    dp[0][0]=true;
    for(int i=1;i<n+1;i++){
        for(int j=1;j<k+1;j++){
            if(arr[i-1]<=j){
                dp[i][j]=(dp[i-1][j] || dp[i-1][j-arr[i-1]]);
            }
            else
            dp[i][j]=dp[i-1][j];
        }
    }

    return dp[n][k];

}
