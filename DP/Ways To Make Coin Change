long countWaysToMakeChange(int *denominations, int n, int value)
{
    //Write your code here
    int m=value;
    long dp[n+1][m+1];
    for(int i=0;i<n+1;i++){
        for(int j=0;j<m+1;j++){
                 if(j==0)// if sum is zero
                dp[i][j]=1;
                else if(i==0) //if arrr is zero
                dp[i][j]=0;
        }
    }
    dp[0][0]=1;
    for(int i=1;i<n+1;i++)
    for(int j=1;j<m+1;j++){
        if(denominations[i-1]<=j){
            dp[i][j]=(dp[i][j-denominations[i-1]]+dp[i-1][j]);
        }
        else 
        dp[i][j]=dp[i-1][j];
    }
    return dp[n][m];
}
