#include <bits/stdc++.h> 
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    // Write your code here.
    vector<pair<int,int>>adj[n+1];
    for(int i=0;i<m;i++){
        int u=g[i].first.first;
        int v=g[i].first.second;
        int wt=g[i].second;

        adj[u].push_back({v,wt});
        adj[v].push_back({u,wt});
    }

priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>> q;
vector<int>vis(n+1,0);
// vis[1]=1;
q.push({0, {1, -1}}); /// wt, node ,parent
vector<pair<pair<int, int>, int>>ans;
while(!q.empty()){
    int wt=q.top().first;
    int node=q.top().second.first;
    int parent=q.top().second.second;
            q.pop();
    if(vis[node]){
        continue;
    }
    vis[node]=1;
    if(parent!=-1)
    ans.push_back({{parent, node}, wt});

    for(auto it:adj[node]){
        int adjn=it.first;
        int adjwt=it.second;
        if(!vis[adjn])
          q.push({adjwt, {adjn, node}});
    }
}
    return ans;
}
