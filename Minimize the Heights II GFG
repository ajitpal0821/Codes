// link:https://practice.geeksforgeeks.org/problems/minimize-the-heights3351/1?page=1&sortBy=submissions



class Solution {
  public:
    int getMinDiff(int arr[], int n, int k) {
        // code here
        sort(arr,arr+n);
         int ans=arr[n-1]-arr[0];
         int s=arr[0]+k;//smallest
         int l=arr[n-1]-k;// largest
         int mini;
         int maxi;
        for(int i=0;i<n;i++){
            
            mini=min(s,arr[i+1]-k);// comparing smallest with smalllest
             maxi=max(l,arr[i]+k);// comparing largest with largest
             if(mini<0)
             continue;
             ans=min(ans,maxi-mini);
               
        }
       
        
        
        return ans;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, k;
        cin >> k;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        auto ans = ob.getMinDiff(arr, n, k);
        cout << ans << "\n";
    }
    return 0;
}
