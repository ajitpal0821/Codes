
//Problem Link:https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article
// GFG Problem


class Solution 
{
    public:
    //Function to find the maximum profit and the number of jobs done.
    static bool cmp(Job a,Job b){
        return a.profit>b.profit;     // Descending order
    }
    // for maximumdeadline
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        sort(arr,arr+n,cmp);
        int cost=0;
    int maxa=INT_MIN;
    for(int i=0;i<n;i++){
        if(maxa<arr[i].dead){
            maxa=arr[i].dead;
        }
    }
    vector<int>schedule(maxa+1,-1);// initialsing with -1
        int count=0;
        for(int i=0;i<n;i++){
            int currid=arr[i].id;
            int currdead=arr[i].dead;
            int currprofit=arr[i].profit;
            
            for(int k=currdead;k>0;k--){
                if(schedule[k]==-1){
                schedule[k]=currid;
                count++;
                cost=cost+currprofit;
                break;
            }
            }
        }
        vector<int>v;
        v.push_back(count);
        v.push_back(cost);
        return v;
    } 
};
