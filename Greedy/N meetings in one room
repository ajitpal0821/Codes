// GFG Problem:https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1

//GFG Code

class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    static bool cmp(pair<int,int>a,pair<int,int>b){
        return a.second<b.second;
    }
    int maxMeetings(int start[], int end[], int n)
    {
        vector<pair<int,int>>v;
        for(int i=0;i<n;i++){
            pair<int,int>p=make_pair(start[i],end[i]);
            v.push_back(p);
        }
        // Your code here
        sort(v.begin(),v.end(),cmp);

       int en=v[0].second;
        int c=1;
        for(int i=1;i<n;i++){
            if(v[i].first>en){
                c++;
                
                en=v[i].second;
            }
        }
        return c;
    }
};
