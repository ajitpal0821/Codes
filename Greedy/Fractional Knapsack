//Problem Link:https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article



class Solution
{
    public:
    //Function to get the maximum total value in the knapsack.
    static bool cmp(pair<double,Item> a,pair<double,Item>b){
        return a.first>b.first;
    }
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
       vector<pair<double,Item>>v;
        
        // for
        // float arr[n];
        for(int i=0;i<n;i++){
           double unit=(1.0*arr[i].value)/arr[i].weight;
           pair<double,Item>p=make_pair(unit,arr[i]);
           v.push_back(p);
        }
       double cost=0;
        sort(v.begin(),v.end(),cmp);
        for(int i=0;i<n;i++){
            if(v[i].second.weight>W){
                cost=cost+W*v[i].first;
                W=0;
            }
            else{
                cost=cost+v[i].second.value;
                W=W-v[i].second.weight;
            }
        }
  return cost;
    }
        
};
