#include <bits/stdc++.h>
bool cmp(const  pair<int,pair<int, int>>&a,const pair<int,pair<int, int>>&b) {
    if(a.first<b.first)
    return true; 
    else if (a.first>b.first)
    return false;
   else if(a.second.second<b.second.second)
    return true;
    else
    return false;
    
    }
vector<int> maximumMeetings(vector<int> &start, vector<int> &end) {
  
     int n = start.size();
    vector<pair<int,pair<int, int>>> p;

    for (int i = 0; i < n; i++) {
      p.push_back({end[i], {start[i], i + 1}});
    }

    sort(p.begin(), p.end(),cmp);

    vector<int> vec;
    int prevEnd = -1;
    for (int i = 0; i < n; i++) {
        if (p[i].second.first > prevEnd) {
            vec.push_back(p[i].second.second);
            prevEnd = p[i].first;
        }
    }

    return vec;

    // return vec;
}
