void dfs(vector<int> adj[], vector<int> &vis, int node) {
  vis[node] = 1;
  for (auto it : adj[node]){
	  	if(!vis[it])
		  {
			  dfs(adj,vis,it);
		  }
  }

}
int makeGraphConnected(int n, vector < pair < int,int > > edges, int m) 
{
	// Write Your Code here      
	// int m=edges.size();
	if(m<n-1){
		return -1;
	}
	vector<int>adj[n+1];
	for(int i=0;i<edges.size();i++){
		int u=edges[i].first;
		int v=edges[i].second;
		adj[u].push_back(v);
		adj[v].push_back(u);

	}
	int count=-1;
vector<int>vis(n+1,0);
for(int i=1;i<=n;i++){
	if(!vis[i]){
		count++;
		dfs(adj,vis,i);
	}
}
return count;
}
