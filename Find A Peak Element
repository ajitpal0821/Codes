int find(vector<vector<int>> &g,int n,int m,int mid){
    int maxval=-1,maxind=-1;
    for(int i=0;i<n;i++){
        if(g[i][mid]>maxval){
            maxval=g[i][mid];
            maxind=i;
        }
    }
    return maxind;
}
vector<int> findPeakGrid(vector<vector<int>> &g){
    // Write your code here.    
    vector<int>ans;
    int n=g.size();
    int m=g[0].size();
    int low=0,high=m-1;// for columns
    while(low<=high){
        int mid=(low+high)/2;
        int maxrow=find(g,n,m,mid);
        int left=mid-1>0?g[maxrow][mid-1]:-1;
        int right=mid+1<m?g[maxrow][mid+1]:-1;
        if(g[maxrow][mid]>left && g[maxrow][mid]>right)
        return {maxrow,mid};
        else if(g[maxrow][mid]<left){
            high=mid-1;
        }
        else
        low=mid+1;
    }
    return {-1,-1};
}
