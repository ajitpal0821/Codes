#include <bits/stdc++.h> 

vector<int> kMaxSumCombination(vector<int> &a, vector<int> &b, int n, int k){
	// Write your code here.
sort(a.begin(),a.end());
sort(b.begin(),b.end());

priority_queue<pair<int,pair<int,int>>>pq;
set<pair<int,int>>s;

pq.push({a[n-1]+b[n-1],{n-1,n-1}});
s.insert({n-1,n-1});
// int k=a.size();
vector<int>ans;
while(n--){
	int sum=pq.top().first;
	int l=pq.top().second.first;
	int r=pq.top().second.second;
		pq.pop();
                if (k > 0) {
                  ans.push_back(sum);
                  k--;
                }
        if(l>0 && r>0 && s.find(make_pair(l-1,r))==s.end() ){
		pq.push({a[l-1]+b[r],{l-1,r}});
		s.insert({l-1,r});
	}
	if(l>0 && r>0 && s.find(make_pair(l,r-1))==s.end()){
		pq.push({a[l]+b[r-1],{l,r-1}});
		s.insert({l,r-1});
	}
}
return ans;
}
