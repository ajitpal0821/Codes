//link:https://practice.geeksforgeeks.org/problems/path-with-minimum-effort/1
// help from striver




class Solution {
  public:
    int MinimumEffort(vector<vector<int>>& heights) {
        // Code here
        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>>pq;//{diff,{row,col}}
        pq.push({0,{0,0}});//min heap
        int n=heights.size();
        int m=heights[0].size();
        vector<vector<int>>dis(n,vector<int>(m,INT_MAX));
        dis[0][0]=0;
        int delrow[]={-1,0,+1,0};
        int delcol[]={0,+1,0,-1};
        while(!pq.empty()){
            auto it=pq.top();
            pq.pop();
            int diff=it.first;
            int r=it.second.first;
            int c=it.second.second;
            
            if(r==n-1 && c==m-1) return diff;
            
            for(int i=0;i<4;i++){
                int newr=r+delrow[i];
                int newc=c+delcol[i];
                if(newr>=0 &&newc>=0 &&newr<n &&newc<m){
                int difference=abs(heights[newr][newc]-heights[r][c]);
                int neweff=max(diff,difference);
                if(neweff<dis[newr][newc]){
                    dis[newr][newc]=neweff;
                    pq.push({neweff,{newr,newc}});
                }
                }
            }
        }
        return 0;
    }
};
