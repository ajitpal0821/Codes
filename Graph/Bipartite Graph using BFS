// problem link:https://practice.geeksforgeeks.org/problems/bipartite-graph/1
// help from striver


class Solution {
public:
bool check(int start,int V,vector<int>adj[],int color[]){
    queue<int>q;
    q.push(start);
    color[start]=0;
    while(!q.empty()){
        int node=q.front();
        q.pop();
        for(auto it:adj[node]){
            if(color[it]==-1){
                color[it]=!color[node];
                q.push(it);
            }
            else if(color[node]==color[it])
            return false;
        }
    }
    return true;
}
	bool isBipartite(int V, vector<int>adj[]){
	    // Code here
	    int color[V];
	    for(int i=0;i<V;i++){color[i]=-1;}
	    for(int i=0;i<V;i++){             // this loop is used when we connected componets
	        if(color[i]==-1){
	            if(check(i,V,adj,color)==false)
	            return false;
	        }
	    }
	    return true;
	}

};
