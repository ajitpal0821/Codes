// https://practice.geeksforgeeks.org/problems/alien-dictionary/1
//help from striver
// topological sort+ logic


class Solution{
    public:
    vector<int> findOrder(int V, vector<int>adj[]) 
    {
        //code here
         
	     int indegree[V]={0};
        
        for(int i=0;i<V;i++){
            for(auto it:adj[i]){
                indegree[it]++;
            }
        }
        queue<int>q;
        for(int i=0;i<V;i++){
            if(indegree[i]==0)
            q.push(i);
        }
        int cnt=0;
        vector<int>topo;
        while(!q.empty()){
            int node=q.front();
            q.pop();
            topo.push_back(node);
            cnt++;
            for(auto it:adj[node]){
                indegree[it]--;
                if(indegree[it]==0)
                q.push(it);
            }
        }
        return topo;
    }
    string findOrder(string dict[], int N, int K) {
        //code here
        vector<int>adj[K];
        for(int i=0;i<N-1;i++){
            string s1=dict[i];
            string s2=dict[i+1];// finding occurs of element before another
            int n=min(s1.size(),s2.size());
            for(int i=0;i<n;i++){
            if(s1[i]!=s2[i]){// not equal s1[i]->s2[i]
                adj[s1[i]-'a'].push_back(s2[i]-'a');// into number
                break;
            }
            }
        }
        vector<int>topo=findOrder(K,adj);
        string ans="";
        for(auto it:topo){
            ans=ans+char(it+'a');//into characters
        }
        return ans;
        
    }
};
