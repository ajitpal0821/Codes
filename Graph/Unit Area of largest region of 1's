
class Solution
{
    public:
    //Function to find unit area of the largest region of 1s.
     int cnt=0;
        void dfs(int i,int j,vector<vector<int>>&grid,vector<vector<int>>&vis){
        int r[]={-1,0,1,0,-1,1,-1,1};
        int c[]={0,-1,0,1,1,1,-1,-1};
        int N=grid.size();
        int M=grid[0].size();
        cnt++;
        vis[i][j]=1;
            for(int k=0;k<8;k++){
                int nr=i+r[k];
                int nc=j+c[k];
                
                if(nr>=0 && nr<N && nc>=0 && nc<M && !vis[nr][nc] && grid[nr][nc]==1){
                    dfs(nr,nc,grid,vis);
                }
    
        }
        }
        
    int findMaxArea(vector<vector<int>>& grid) {
        // Code here
        int N=grid.size();
        int M=grid[0].size();
        
        vector<vector<int>>vis(N,vector<int>(M,0));
        // queue<pair<pair<int,int>,int>>q;
        // int cnt=0;
        int maxi=0;
        for(int i=0;i<N;i++){
            for(int j=0;j<M;j++){
                if(grid[i][j]==1){
                dfs(i,j,grid,vis);
                maxi=max(maxi,cnt);
                cnt=0;
                }
          
            }
        }
        return maxi;
    }
       
};

